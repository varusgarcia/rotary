/*FORKING Project by Alvaro Garcia 2016
This code is part of my Wireless Rotary Phone Projcet:  http://agweiss.com/projects/rotary
The idea was to modify a ROtary Phone so that it would work wirelessly, like a mobile phone.
For that i used a Arduino Mega, an old Samsung Mobile phone and an old Rotary phone i had laying around.
I used the Arduino Mega because it has more than enough digital pins to use to control the mobile phone.*/

/*I had to first take apart the phone so that i had access to the buttons. 
The Arduino is hooked up to the phone with an optocoupler inbetween each connection, so that when the arduino pin is set HIGH, the button circuit of the phone closed and the number is pressed.
Here is the Pinout connection to the phone:

button 1 = PIN 39
button 2 = PIN 41
button 3 = PIN 45
button 4 = PIN 33
button 5 = PIN 35
button 6 = PIN 37
button 7 = PIN 27
button 8 = PIN 29
button 9 = PIN 31
button 0 = PIN 23
button Call/Tak call = PIN 43
button Cancel/Hang Up = PIN 47*/

const int but1 = 39; 
const int but2 = 41;
const int but3 = 45;
const int but4 = 33;
const int but5 = 35;
const int but6 = 37;
const int but7 = 27;
const int but8 = 29;
const int but9 = 31;
const int but10 = 23;
const int butCall = 43;
const int butHang = 47;

//So that the Arduino knows when someone is calling the phone, I also hooked up an optocoupler from the Phone's vibration motor to the arduino. When someone calls, the mobile phone 
//sends current to the motor, which is not there, the current gets to the optocoupler and it closes the circuit to the arduino. This is connected to PIN 53

int ringing = 53;

//The rotary mechanism works with two switches, one of them, "limit" closes while the number is beeing dialed, and the other "counter" closes and opens for each number.
//Limit is connected to PIN 10 and Counter to PIN 11

int counter =11;
int limit = 10;

//Each time the counter circuit is closed, i add one number to "rotaryCounter" and is set to 0 when the number has been pressed.

int rotaryCounter = 0;

//There is also a switch that closes when the headset is taken and opens when it's not. It's called "headset" and is connected to PIN 12

int headset = 12;

//For the Ringing mechanism i've used a H-Bridge that basically changes the current direction so that the magnetic field generated by the electromagnets change and move the metal piece that hits the bells.
//The H-Bridge is controlled by setting "ring" (Connected to PIN 4) or "rang" (Connected to PIN 7) HIGH.

int ring = 4;
int rang = 7;

/*
We need some variables so that an action is carried out only the first time something happens. This might be confunsing, let me explain whith a concrete example. 
I want the arduino to press the "butHang" button when the headset is placed on the phone. So i try with 
  if (digitalRead(headset) == HIGH){
      digitalWrite(butHang,HIGH);
      delay(200);
      digitalWrite(butHang,LOW)
  }

This doesn't exactly work, because it presses the button every loop, and i just want the button to be pressed once, for that, i use "headsetLow":

  if (digitalRead(headset) == HIGH && HeadsetLow == true){
      headsetLow = false;
      digitalWrite(butHang,HIGH);
      delay(200);
      digitalWrite(butHang,LOW)
  }

headsetLow is set back to true when the headset is taken.

I needed the same fr counting the dial, for that i used "rotaryCountLow"
*/

int headsetLow = false;
int rotaryCountLow = false;

//countdown that will start each time one number has been dialed and resetted to 0 each time a new number has been dialed. When the counter is above 300 (+- 5secs) the arduino presses the "butCall" button.

int callCountdown = 0;


void setup() {

//In the setup i have to declare all the OUTPUT and INPUT pins.
//The OUTPUT pins are the ones the Arduino sets HIGH or LOW, basically all the outputs to press the buttons on the mobule phone and "ring" & "rang" for the H-Bridge

  pinMode(but1, OUTPUT);
  pinMode(but2, OUTPUT);
  pinMode(but3, OUTPUT);
  pinMode(but4, OUTPUT);
  pinMode(but5, OUTPUT);
  pinMode(but6, OUTPUT);
  pinMode(but7, OUTPUT);
  pinMode(but8, OUTPUT);
  pinMode(but9, OUTPUT);
  pinMode(but10, OUTPUT);
  pinMode(butCall, OUTPUT);
  pinMode(butHang, OUTPUT);
  pinMode(ring,OUTPUT);
  pinMode(rang,OUTPUT);
  
//The INPUT pins are those attached to switches, which the arduino has to detect whether they are pressed or not. If a switch is pressed (circuit closed), the Arduino will get a LOW from that pin and a HIGH when it's released (circuit is open)

  pinMode(headset, INPUT_PULLUP);
  pinMode(ringing, INPUT_PULLUP);
  pinMode(counter, INPUT_PULLUP);
  pinMode(limit, INPUT_PULLUP);

  Serial.begin(9600);
}

void loop() {
                                                                       //DIALING 
  
 if (digitalRead(headset) == LOW ){                                    //When the headset is taken
                                                                        
    headsetLow = true;                                                 //Reset the headsetLow to true so that when it's hanged it will press the Hang/Cancel button only once (already explained in depth above)
    
    if(digitalRead(limit) == LOW){                                     //When the "limit" circuit is closed (when the the number is beeing dialed)
            callCountdown = 0;                                         //Reset the countdown to 0 so that the Arduino doesn't press the call button

      if (digitalRead(counter) == LOW && rotaryCountLow == false){     //When the "counter" circuit is closed (closes and opens for each number) && that the variable is false (so that it only adds a number once)  
        delay(8);                                                      // a quick delay so that we are sure that the switch is active
        
        if (digitalRead(counter) == LOW){                              //Again it checks if the "counter" is active (to make sure that it is really active and that it is not an interference)
  
          rotaryCounter++;                                             //Adds to the counter (where the numbers are stored). FOr the number 8, for example, this occurs 8 times, so rotaryCounter = 8. This is explained in depth and with an illustration in the website.
          rotaryCountLow = true;                                       //Reset rotaryCountLow to true so that when it only adds a number to "rotaryCounter" once (already explained in depth above)
          
        }
      }
      
      if (digitalRead(counter) == HIGH && rotaryCountLow == true){     //When the "counter" circuit is open (closes and opens for each number) &&  that the variable is true
        
        rotaryCountLow = false;                                        //Reset rotaryCountLow to false
      }
    }
      
      if(digitalRead(limit)== HIGH && rotaryCounter>=1){               //When the "limit" circuit is open (when the the number has been dialed) && the counter is more than one (only when a number has been dialed)
        
        if (rotaryCounter ==1){                                        //When the counter == 1 (number 1 has been dialed) has been dialed, sets the but1 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 1 during 200 miliseconds and releases it)
          digitalWrite(but1,HIGH);
          delay(200);
          digitalWrite(but1,LOW);
        }
        if (rotaryCounter ==2){                                         //When the counter == 2 (number 2 has been dialed) has been dialed, sets the but2 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 2 during 200 miliseconds and releases it)
          digitalWrite(but2,HIGH);
          delay(200);
          digitalWrite(but2,LOW);
        }
        if (rotaryCounter ==3){                                         //When the counter == 3 (number 3 has been dialed) has been dialed, sets the but3 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 3 during 200 miliseconds and releases it)
          digitalWrite(but3,HIGH);
          delay(200);
          digitalWrite(but3,LOW);
        }
        if (rotaryCounter ==4){                                         //When the counter == 4 (number 4 has been dialed) has been dialed, sets the but4 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 4 during 200 miliseconds and releases it) 
          digitalWrite(but4,HIGH);
          delay(200);
          digitalWrite(but4,LOW);
        }
        if (rotaryCounter ==5){                                         //When the counter == 5 (number 5 has been dialed) has been dialed, sets the but5 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 5 during 200 miliseconds and releases it)
          digitalWrite(but5,HIGH);
          delay(200);
          digitalWrite(but5,LOW);
        }
        if (rotaryCounter ==6){                                         //When the counter == 6 (number 6 has been dialed) has been dialed, sets the but6 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 6 during 200 miliseconds and releases it)
          digitalWrite(but6,HIGH);
          delay(200);
          digitalWrite(but6,LOW);
        }
        if (rotaryCounter ==7){                                         //When the counter == 7 (number 7 has been dialed) has been dialed, sets the but7 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 7 during 200 miliseconds and releases it)
          digitalWrite(but7,HIGH);
          delay(200);
          digitalWrite(but7,LOW);
        }
        if (rotaryCounter ==8){                                         //When the counter == 8 (number 8 has been dialed) has been dialed, sets the but8 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 8 during 200 miliseconds and releases it)
          digitalWrite(but8,HIGH);
          delay(200);
          digitalWrite(but8,LOW);
        }
        if (rotaryCounter ==9){                                         //When the counter == 9 (number 9 has been dialed) has been dialed, sets the but9 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 9 during 200 miliseconds and releases it)
          digitalWrite(but9,HIGH);
          delay(200);
          digitalWrite(but9,LOW);
        }
        if (rotaryCounter ==10){                                        //When the counter == 10 (number 0 has been dialed) has been dialed, sets the but10 to HIGH, waits 200 miliseconds and sets it to LOW (Presses the button 0 during 200 miliseconds and releases it)
          digitalWrite(but10,HIGH);
          delay(200);
          digitalWrite(but10,LOW);
        }
    
        rotaryCounter = 0;                                             // Resets the counter to 0 so that it can count the next number
    }
    
    if(digitalRead(limit)== HIGH){                                     //When the "limit" circuit is open (when the the number has been dialed)
    
     delay(20);                                                        //quick delay
       if (callCountdown >= 300){                                      //if the countdown is greater than 300 (if no number has been dialed for about 5 secs)
          digitalWrite(butCall,HIGH);                                  //Sets the call button HIGH
          delay(200);                                                  //waits 200 miliseconds
          digitalWrite(butCall,LOW);                                   //sets it to LOW
          callCountdown = 0;                                           //sets the countdown to 0
       }
      }
      
    callCountdown++;                                                   //adds 1 to the countdown
 }
 
 if (digitalRead(headset) == HIGH && headsetLow == true){              //If headset has been placed back on the phone && that the variable is true (so that it only presses once)
  delay(10);                                                           // a quick delay so that we are sure that the switch is active and that its not an interference
  if(digitalRead(headset) == HIGH){                                    //Checks again if headset has been placed back on the phone
      headsetLow =false;                                               //sets the variable to false, so that it only presses once
      digitalWrite(butHang,HIGH);                                      //sets the Hang button HIGH (presses button)
      delay(200);                                                      //waits 200 miliseconds
      digitalWrite(butHang,LOW);                                       //sets the Hang button LOW (releases button)
      callCountdown = 0;                                               //sets the countdown to 0
        
  }
}
  

                                                                       //RINGING
  
                                  
 if (digitalRead(ringing) == LOW){                                     //When the ringing circuit is closed (when the vibration motor is active (someone is calling))

    digitalWrite(ring,HIGH);                                           //This combination of HIGH and LOW will produce the ringer to ring :)
    digitalWrite(rang,LOW);
    delay(20);
    digitalWrite(ring,LOW);  
    delay(20);
  
    digitalWrite(ring,LOW);
    digitalWrite(rang,HIGH);
    delay(20);
    digitalWrite(rang,LOW);
    delay(20);

    if (digitalRead(headset) == LOW){                                  //When the headset is taken while the phone is ringing (when someone is calling and you take the handset)
      digitalWrite(butCall,HIGH);                                      //sets the Answer button HIGH (presses button)
      delay(200);                                                      //waits 200 miliseconds
      digitalWrite(butCall,LOW);                                       //sets the Answer button LOW (releases button)
      }   
  }
}


//thats it, if you followed all the steps and connected everyting like i did, it should work ;)
//If not, feel free to contact me trough my website http://agweiss.com/


